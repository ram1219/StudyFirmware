
FirmwareTest_KIMGARAM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009e  00800100  00000af2  00000b86  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000af2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  0080019e  0080019e  00000c24  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c24  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c80  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00000cc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000db5  00000000  00000000  00000d10  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000963  00000000  00000000  00001ac5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000066b  00000000  00000000  00002428  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f4  00000000  00000000  00002a94  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004a3  00000000  00000000  00002b88  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000060a  00000000  00000000  0000302b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00003635  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	32 c2       	rjmp	.+1124   	; 0x46a <__vector_1>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 ef       	ldi	r30, 0xF2	; 242
  a0:	fa e0       	ldi	r31, 0x0A	; 10
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ae 39       	cpi	r26, 0x9E	; 158
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ae e9       	ldi	r26, 0x9E	; 158
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	af 39       	cpi	r26, 0x9F	; 159
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	2d d1       	rcall	.+602    	; 0x31e <main>
  c4:	14 c5       	rjmp	.+2600   	; 0xaee <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <putch>:

volatile unsigned char Move_Flag = 0;

void putch(unsigned char data)
{
	while((UCSR0A & 0x20) == 0);			// 전송 준비가 될 때까지 대기(송신)
  c8:	5d 9b       	sbis	0x0b, 5	; 11
  ca:	fe cf       	rjmp	.-4      	; 0xc8 <putch>
	UDR0 = data;							// 데이터를 UDR0에 쓰면 전송
  cc:	8c b9       	out	0x0c, r24	; 12
	UCSR0A |= 0x20;
  ce:	5d 9a       	sbi	0x0b, 5	; 11
  d0:	08 95       	ret

000000d2 <getch>:
}
unsigned char getch()
{
	unsigned char data;
	while((UCSR0A & 0x80) == 0);			// 데이터를 받을때까지 대기(수신)
  d2:	5f 9b       	sbis	0x0b, 7	; 11
  d4:	fe cf       	rjmp	.-4      	; 0xd2 <getch>
	data = UDR0;							// 수신된 데이터는 UDR0에 저장
  d6:	8c b1       	in	r24, 0x0c	; 12
	UCSR0A |= 0x80;
  d8:	5f 9a       	sbi	0x0b, 7	; 11
	
	return data;							
}
  da:	08 95       	ret

000000dc <LED>:
void LED()
{
	unsigned char LED_data;
	int i;
	
	DDRD = 0x00;				// Interrupt
  dc:	11 ba       	out	0x11, r1	; 17
	DDRC = 0xFF;				// LED
  de:	8f ef       	ldi	r24, 0xFF	; 255
  e0:	84 bb       	out	0x14, r24	; 20
	
	EICRA = 0x03;
  e2:	83 e0       	ldi	r24, 0x03	; 3
  e4:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
	EIMSK = 0x01;
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	89 bf       	out	0x39, r24	; 57
	EIFR = 0x01;
  ec:	88 bf       	out	0x38, r24	; 56
	
	sei();
  ee:	78 94       	sei

	while(1){
		LED_data = 0x01;
		if(Move_Flag == 0)
  f0:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <__data_end>
  f4:	81 11       	cpse	r24, r1
  f6:	26 c0       	rjmp	.+76     	; 0x144 <LED+0x68>
  f8:	27 e0       	ldi	r18, 0x07	; 7
  fa:	30 e0       	ldi	r19, 0x00	; 0
  fc:	81 e0       	ldi	r24, 0x01	; 1
		{
			for(i = 0; i < 7; i++){
				PORTC = LED_data;
  fe:	85 bb       	out	0x15, r24	; 21
				LED_data <<= 1;
 100:	88 0f       	add	r24, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 102:	4f ef       	ldi	r20, 0xFF	; 255
 104:	5f e3       	ldi	r21, 0x3F	; 63
 106:	9b e0       	ldi	r25, 0x0B	; 11
 108:	41 50       	subi	r20, 0x01	; 1
 10a:	50 40       	sbci	r21, 0x00	; 0
 10c:	90 40       	sbci	r25, 0x00	; 0
 10e:	e1 f7       	brne	.-8      	; 0x108 <LED+0x2c>
 110:	00 c0       	rjmp	.+0      	; 0x112 <LED+0x36>
 112:	00 00       	nop
 114:	21 50       	subi	r18, 0x01	; 1
 116:	31 09       	sbc	r19, r1

	while(1){
		LED_data = 0x01;
		if(Move_Flag == 0)
		{
			for(i = 0; i < 7; i++){
 118:	91 f7       	brne	.-28     	; 0xfe <LED+0x22>
			LED_data = 0x00;
			PORTC = LED_data;
			break;
		}
		
		if(Move_Flag == 0)
 11a:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <__data_end>
 11e:	91 11       	cpse	r25, r1
 120:	11 c0       	rjmp	.+34     	; 0x144 <LED+0x68>
 122:	28 e0       	ldi	r18, 0x08	; 8
 124:	30 e0       	ldi	r19, 0x00	; 0
		{
			for(i = 0; i <= 7; i++){
				PORTC = LED_data;
 126:	85 bb       	out	0x15, r24	; 21
				LED_data >>= 1;
 128:	86 95       	lsr	r24
 12a:	4f ef       	ldi	r20, 0xFF	; 255
 12c:	5f e3       	ldi	r21, 0x3F	; 63
 12e:	9b e0       	ldi	r25, 0x0B	; 11
 130:	41 50       	subi	r20, 0x01	; 1
 132:	50 40       	sbci	r21, 0x00	; 0
 134:	90 40       	sbci	r25, 0x00	; 0
 136:	e1 f7       	brne	.-8      	; 0x130 <LED+0x54>
 138:	00 c0       	rjmp	.+0      	; 0x13a <LED+0x5e>
 13a:	00 00       	nop
 13c:	21 50       	subi	r18, 0x01	; 1
 13e:	31 09       	sbc	r19, r1
			break;
		}
		
		if(Move_Flag == 0)
		{
			for(i = 0; i <= 7; i++){
 140:	91 f7       	brne	.-28     	; 0x126 <LED+0x4a>
 142:	d6 cf       	rjmp	.-84     	; 0xf0 <LED+0x14>
				_delay_ms(500);
			}
		}
		else{
			LED_data = 0x00;
			PORTC = LED_data;
 144:	15 ba       	out	0x15, r1	; 21
 146:	08 95       	ret

00000148 <Moter>:
		}
	}
}

void Moter()
{
 148:	0f 93       	push	r16
 14a:	1f 93       	push	r17
 14c:	cf 93       	push	r28
 14e:	df 93       	push	r29
 150:	cd b7       	in	r28, 0x3d	; 61
 152:	de b7       	in	r29, 0x3e	; 62
 154:	69 97       	sbiw	r28, 0x19	; 25
 156:	0f b6       	in	r0, 0x3f	; 63
 158:	f8 94       	cli
 15a:	de bf       	out	0x3e, r29	; 62
 15c:	0f be       	out	0x3f, r0	; 63
 15e:	cd bf       	out	0x3d, r28	; 61
	unsigned char Rx_data = 0;
	unsigned char M_Menu[] = "\r\n right : f, left : r \n";
 160:	89 e1       	ldi	r24, 0x19	; 25
 162:	e0 e1       	ldi	r30, 0x10	; 16
 164:	f1 e0       	ldi	r31, 0x01	; 1
 166:	de 01       	movw	r26, r28
 168:	11 96       	adiw	r26, 0x01	; 1
 16a:	01 90       	ld	r0, Z+
 16c:	0d 92       	st	X+, r0
 16e:	8a 95       	dec	r24
 170:	e1 f7       	brne	.-8      	; 0x16a <Moter+0x22>
	
	DDRD = 0x20;
 172:	80 e2       	ldi	r24, 0x20	; 32
 174:	81 bb       	out	0x11, r24	; 17
	DDRA = 0xF0;
 176:	80 ef       	ldi	r24, 0xF0	; 240
 178:	8a bb       	out	0x1a, r24	; 26
	
	EICRA = 0x03;
 17a:	83 e0       	ldi	r24, 0x03	; 3
 17c:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
	EIMSK = 0x01;
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	89 bf       	out	0x39, r24	; 57
	EIFR = 0x01;
 184:	88 bf       	out	0x38, r24	; 56

	PORTD &= ~0x20;
 186:	95 98       	cbi	0x12, 5	; 18
	
	int i = 0;
	
	sei();
 188:	78 94       	sei
 18a:	8e 01       	movw	r16, r28
 18c:	0f 5f       	subi	r16, 0xFF	; 255
 18e:	1f 4f       	sbci	r17, 0xFF	; 255
	while(M_Menu[i] != '\0') putch(M_Menu[i++]);
 190:	f8 01       	movw	r30, r16
 192:	81 91       	ld	r24, Z+
 194:	8f 01       	movw	r16, r30
 196:	88 23       	and	r24, r24
 198:	11 f0       	breq	.+4      	; 0x19e <Moter+0x56>
 19a:	96 df       	rcall	.-212    	; 0xc8 <putch>
 19c:	f9 cf       	rjmp	.-14     	; 0x190 <Moter+0x48>
			
	Rx_data = getch();
 19e:	99 df       	rcall	.-206    	; 0xd2 <getch>
 1a0:	8f 7d       	andi	r24, 0xDF	; 223
			
	if((Rx_data == 'F') || (Rx_data == 'f')){
 1a2:	86 34       	cpi	r24, 0x46	; 70
 1a4:	29 f5       	brne	.+74     	; 0x1f0 <Moter+0xa8>
 1a6:	30 e8       	ldi	r19, 0x80	; 128
		while(1){
			if(Move_Flag == 0){
				PORTA = 0x80;
 1a8:	20 e4       	ldi	r18, 0x40	; 64
				_delay_ms(10);
				PORTA = 0x40;
 1aa:	90 e2       	ldi	r25, 0x20	; 32
				_delay_ms(10);
				PORTA = 0x20;
 1ac:	80 e1       	ldi	r24, 0x10	; 16
				_delay_ms(10);
				PORTA = 0x10;
 1ae:	40 91 9e 01 	lds	r20, 0x019E	; 0x80019e <__data_end>
			
	Rx_data = getch();
			
	if((Rx_data == 'F') || (Rx_data == 'f')){
		while(1){
			if(Move_Flag == 0){
 1b2:	41 11       	cpse	r20, r1
 1b4:	44 c0       	rjmp	.+136    	; 0x23e <Moter+0xf6>
 1b6:	3b bb       	out	0x1b, r19	; 27
				PORTA = 0x80;
 1b8:	ef ef       	ldi	r30, 0xFF	; 255
 1ba:	f7 e4       	ldi	r31, 0x47	; 71
 1bc:	31 97       	sbiw	r30, 0x01	; 1
 1be:	f1 f7       	brne	.-4      	; 0x1bc <Moter+0x74>
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <Moter+0x7a>
 1c2:	00 00       	nop
 1c4:	2b bb       	out	0x1b, r18	; 27
				_delay_ms(10);
				PORTA = 0x40;
 1c6:	ef ef       	ldi	r30, 0xFF	; 255
 1c8:	f7 e4       	ldi	r31, 0x47	; 71
 1ca:	31 97       	sbiw	r30, 0x01	; 1
 1cc:	f1 f7       	brne	.-4      	; 0x1ca <Moter+0x82>
 1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <Moter+0x88>
 1d0:	00 00       	nop
 1d2:	9b bb       	out	0x1b, r25	; 27
				_delay_ms(10);
				PORTA = 0x20;
 1d4:	ef ef       	ldi	r30, 0xFF	; 255
 1d6:	f7 e4       	ldi	r31, 0x47	; 71
 1d8:	31 97       	sbiw	r30, 0x01	; 1
 1da:	f1 f7       	brne	.-4      	; 0x1d8 <Moter+0x90>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <Moter+0x96>
 1de:	00 00       	nop
 1e0:	8b bb       	out	0x1b, r24	; 27
				_delay_ms(10);
				PORTA = 0x10;
 1e2:	ef ef       	ldi	r30, 0xFF	; 255
 1e4:	f7 e4       	ldi	r31, 0x47	; 71
 1e6:	31 97       	sbiw	r30, 0x01	; 1
 1e8:	f1 f7       	brne	.-4      	; 0x1e6 <Moter+0x9e>
 1ea:	00 c0       	rjmp	.+0      	; 0x1ec <Moter+0xa4>
 1ec:	00 00       	nop
 1ee:	df cf       	rjmp	.-66     	; 0x1ae <Moter+0x66>
 1f0:	82 35       	cpi	r24, 0x52	; 82
				Move_Flag = 0;
				break;
			}					
		}
	}
	else if((Rx_data == 'R') || (Rx_data == 'r'))
 1f2:	39 f5       	brne	.+78     	; 0x242 <Moter+0xfa>
 1f4:	30 e1       	ldi	r19, 0x10	; 16
	{
		while(1){
			if(Move_Flag == 0){
				PORTA = 0x10;
 1f6:	20 e2       	ldi	r18, 0x20	; 32
				_delay_ms(10);
				PORTA = 0x20;
 1f8:	90 e4       	ldi	r25, 0x40	; 64
				_delay_ms(10);
				PORTA = 0x40;
 1fa:	80 e8       	ldi	r24, 0x80	; 128
				_delay_ms(10);
				PORTA = 0x80;
 1fc:	40 91 9e 01 	lds	r20, 0x019E	; 0x80019e <__data_end>
		}
	}
	else if((Rx_data == 'R') || (Rx_data == 'r'))
	{
		while(1){
			if(Move_Flag == 0){
 200:	41 11       	cpse	r20, r1
 202:	1d c0       	rjmp	.+58     	; 0x23e <Moter+0xf6>
 204:	3b bb       	out	0x1b, r19	; 27
				PORTA = 0x10;
 206:	ef ef       	ldi	r30, 0xFF	; 255
 208:	f7 e4       	ldi	r31, 0x47	; 71
 20a:	31 97       	sbiw	r30, 0x01	; 1
 20c:	f1 f7       	brne	.-4      	; 0x20a <Moter+0xc2>
 20e:	00 c0       	rjmp	.+0      	; 0x210 <Moter+0xc8>
 210:	00 00       	nop
 212:	2b bb       	out	0x1b, r18	; 27
				_delay_ms(10);
				PORTA = 0x20;
 214:	ef ef       	ldi	r30, 0xFF	; 255
 216:	f7 e4       	ldi	r31, 0x47	; 71
 218:	31 97       	sbiw	r30, 0x01	; 1
 21a:	f1 f7       	brne	.-4      	; 0x218 <Moter+0xd0>
 21c:	00 c0       	rjmp	.+0      	; 0x21e <Moter+0xd6>
 21e:	00 00       	nop
 220:	9b bb       	out	0x1b, r25	; 27
				_delay_ms(10);
				PORTA = 0x40;
 222:	ef ef       	ldi	r30, 0xFF	; 255
 224:	f7 e4       	ldi	r31, 0x47	; 71
 226:	31 97       	sbiw	r30, 0x01	; 1
 228:	f1 f7       	brne	.-4      	; 0x226 <Moter+0xde>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <Moter+0xe4>
 22c:	00 00       	nop
 22e:	8b bb       	out	0x1b, r24	; 27
				_delay_ms(10);
				PORTA = 0x80;
 230:	ef ef       	ldi	r30, 0xFF	; 255
 232:	f7 e4       	ldi	r31, 0x47	; 71
 234:	31 97       	sbiw	r30, 0x01	; 1
 236:	f1 f7       	brne	.-4      	; 0x234 <Moter+0xec>
 238:	00 c0       	rjmp	.+0      	; 0x23a <Moter+0xf2>
 23a:	00 00       	nop
 23c:	df cf       	rjmp	.-66     	; 0x1fc <Moter+0xb4>
 23e:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <__data_end>
				_delay_ms(10);
			}
			else{
				Move_Flag = 0;
 242:	69 96       	adiw	r28, 0x19	; 25
				break;
			}
		}
	}	
}
 244:	0f b6       	in	r0, 0x3f	; 63
 246:	f8 94       	cli
 248:	de bf       	out	0x3e, r29	; 62
 24a:	0f be       	out	0x3f, r0	; 63
 24c:	cd bf       	out	0x3d, r28	; 61
 24e:	df 91       	pop	r29
 250:	cf 91       	pop	r28
 252:	1f 91       	pop	r17
 254:	0f 91       	pop	r16
 256:	08 95       	ret

00000258 <CDS>:
 258:	bf 92       	push	r11

void CDS()
{
 25a:	cf 92       	push	r12
 25c:	df 92       	push	r13
 25e:	ef 92       	push	r14
 260:	ff 92       	push	r15
 262:	0f 93       	push	r16
 264:	1f 93       	push	r17
 266:	cf 93       	push	r28
 268:	df 93       	push	r29
 26a:	cd b7       	in	r28, 0x3d	; 61
 26c:	de b7       	in	r29, 0x3e	; 62
 26e:	60 97       	sbiw	r28, 0x10	; 16
 270:	0f b6       	in	r0, 0x3f	; 63
 272:	f8 94       	cli
 274:	de bf       	out	0x3e, r29	; 62
 276:	0f be       	out	0x3f, r0	; 63
 278:	cd bf       	out	0x3d, r28	; 61
	unsigned int AdData = 0;
	char cds[16];
	int i;
	
	DDRA = 0XFF;
 27a:	8f ef       	ldi	r24, 0xFF	; 255
 27c:	8a bb       	out	0x1a, r24	; 26
	DDRF = (1 << DDRF1);   //DDRF1번 출력 나머지 입력 바꿔줌
 27e:	82 e0       	ldi	r24, 0x02	; 2
 280:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	ADMUX = 0X00;
 284:	17 b8       	out	0x07, r1	; 7
	ADCSRA = (1 << ADEN)|(1 << ADPS2)|(1 << ADPS1);      //64분주비
 286:	86 e8       	ldi	r24, 0x86	; 134
 288:	86 b9       	out	0x06, r24	; 6
	
	EICRA = 0x03;
 28a:	83 e0       	ldi	r24, 0x03	; 3
 28c:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
	EIMSK = 0x01;
 290:	81 e0       	ldi	r24, 0x01	; 1
 292:	89 bf       	out	0x39, r24	; 57
	EIFR = 0x01;
 294:	88 bf       	out	0x38, r24	; 56
	
	sei();
 296:	78 94       	sei
	
	while(1)
	{
		if(Move_Flag == 0)
		{
			PORTF = (1 << PORTF1);                  
 298:	82 e0       	ldi	r24, 0x02	; 2
 29a:	b8 2e       	mov	r11, r24
			ADCSRA |= (1 << ADSC);                  
			
			while((ADCSRA & 0x10)==0x00);           
			AdData = ADC;                        
			
			sprintf(cds, "Data : %d \r\n", AdData);
 29c:	09 e2       	ldi	r16, 0x29	; 41
 29e:	11 e0       	ldi	r17, 0x01	; 1
 2a0:	ce 01       	movw	r24, r28
 2a2:	01 96       	adiw	r24, 0x01	; 1
 2a4:	7c 01       	movw	r14, r24
	
	sei();
	
	while(1)
	{
		if(Move_Flag == 0)
 2a6:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <__data_end>
 2aa:	81 11       	cpse	r24, r1
 2ac:	26 c0       	rjmp	.+76     	; 0x2fa <CDS+0xa2>
		{
			PORTF = (1 << PORTF1);                  
 2ae:	b0 92 62 00 	sts	0x0062, r11	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
			ADCSRA |= (1 << ADSC);                  
 2b2:	36 9a       	sbi	0x06, 6	; 6
			
			while((ADCSRA & 0x10)==0x00);           
 2b4:	34 9b       	sbis	0x06, 4	; 6
 2b6:	fe cf       	rjmp	.-4      	; 0x2b4 <CDS+0x5c>
			AdData = ADC;                        
 2b8:	84 b1       	in	r24, 0x04	; 4
 2ba:	95 b1       	in	r25, 0x05	; 5
			
			sprintf(cds, "Data : %d \r\n", AdData);
 2bc:	9f 93       	push	r25
 2be:	8f 93       	push	r24
 2c0:	1f 93       	push	r17
 2c2:	0f 93       	push	r16
 2c4:	ff 92       	push	r15
 2c6:	ef 92       	push	r14
 2c8:	37 d1       	rcall	.+622    	; 0x538 <sprintf>
 2ca:	67 01       	movw	r12, r14
			i = 0;
			while(cds[i] != '\0') putch(cds[i++]);
 2cc:	0f 90       	pop	r0
 2ce:	0f 90       	pop	r0
 2d0:	0f 90       	pop	r0
 2d2:	0f 90       	pop	r0
 2d4:	0f 90       	pop	r0
 2d6:	0f 90       	pop	r0
 2d8:	f6 01       	movw	r30, r12
 2da:	81 91       	ld	r24, Z+
 2dc:	6f 01       	movw	r12, r30
 2de:	88 23       	and	r24, r24
 2e0:	11 f0       	breq	.+4      	; 0x2e6 <CDS+0x8e>
 2e2:	f2 de       	rcall	.-540    	; 0xc8 <putch>
 2e4:	f9 cf       	rjmp	.-14     	; 0x2d8 <CDS+0x80>
 2e6:	ff ef       	ldi	r31, 0xFF	; 255
 2e8:	2f e7       	ldi	r18, 0x7F	; 127
 2ea:	86 e1       	ldi	r24, 0x16	; 22
 2ec:	f1 50       	subi	r31, 0x01	; 1
 2ee:	20 40       	sbci	r18, 0x00	; 0
 2f0:	80 40       	sbci	r24, 0x00	; 0
 2f2:	e1 f7       	brne	.-8      	; 0x2ec <CDS+0x94>
 2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <CDS+0x9e>
 2f6:	00 00       	nop
 2f8:	d6 cf       	rjmp	.-84     	; 0x2a6 <CDS+0x4e>
			_delay_ms(1000);
		}
		else{
			Move_Flag = 0;
 2fa:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <__data_end>
			break;
		}
	}
}
 2fe:	60 96       	adiw	r28, 0x10	; 16
 300:	0f b6       	in	r0, 0x3f	; 63
 302:	f8 94       	cli
 304:	de bf       	out	0x3e, r29	; 62
 306:	0f be       	out	0x3f, r0	; 63
 308:	cd bf       	out	0x3d, r28	; 61
 30a:	df 91       	pop	r29
 30c:	cf 91       	pop	r28
 30e:	1f 91       	pop	r17
 310:	0f 91       	pop	r16
 312:	ff 90       	pop	r15
 314:	ef 90       	pop	r14
 316:	df 90       	pop	r13
 318:	cf 90       	pop	r12
 31a:	bf 90       	pop	r11
 31c:	08 95       	ret

0000031e <main>:
void LED();
void PIANO();
void Moter();

int main()
{
 31e:	cf 93       	push	r28
 320:	df 93       	push	r29
 322:	cd b7       	in	r28, 0x3d	; 61
 324:	de b7       	in	r29, 0x3e	; 62
 326:	c8 56       	subi	r28, 0x68	; 104
 328:	d1 09       	sbc	r29, r1
 32a:	0f b6       	in	r0, 0x3f	; 63
 32c:	f8 94       	cli
 32e:	de bf       	out	0x3e, r29	; 62
 330:	0f be       	out	0x3f, r0	; 63
 332:	cd bf       	out	0x3d, r28	; 61
	unsigned char Rx_data = 0;					// 키보드 입력을 저장하는 변수
	unsigned char Cds[30];
	unsigned char text[] =
 334:	8c e5       	ldi	r24, 0x5C	; 92
 336:	e6 e3       	ldi	r30, 0x36	; 54
 338:	f1 e0       	ldi	r31, 0x01	; 1
 33a:	de 01       	movw	r26, r28
 33c:	11 96       	adiw	r26, 0x01	; 1
 33e:	01 90       	ld	r0, Z+
 340:	0d 92       	st	X+, r0
 342:	8a 95       	dec	r24
 344:	e1 f7       	brne	.-8      	; 0x33e <main+0x20>
	"\r\n ++++ Menu ++++ \r\nL : LED\r\nC : CDS\r\nP : PIANO(0~7)\r\nS : Step Motor\r\npush button0 : stop\r\n";
	unsigned char input[] = "\r\nInput >> ";
 346:	8c e0       	ldi	r24, 0x0C	; 12
 348:	e2 e9       	ldi	r30, 0x92	; 146
 34a:	f1 e0       	ldi	r31, 0x01	; 1
 34c:	de 01       	movw	r26, r28
 34e:	a3 5a       	subi	r26, 0xA3	; 163
 350:	bf 4f       	sbci	r27, 0xFF	; 255
 352:	01 90       	ld	r0, Z+
 354:	0d 92       	st	X+, r0
 356:	8a 95       	dec	r24
 358:	e1 f7       	brne	.-8      	; 0x352 <main+0x34>
	unsigned int ADC_data = 0;
	int i = 0;
	
	// 부저(멜로디)
	DDRE = 0x0E;								// Rx(입력 0), Tx(출력, 1)
 35a:	8e e0       	ldi	r24, 0x0E	; 14
 35c:	82 b9       	out	0x02, r24	; 2
	DDRB = 0x80;	
 35e:	80 e8       	ldi	r24, 0x80	; 128
 360:	87 bb       	out	0x17, r24	; 23
		
	TCCR1A |= 0x0A;							// 0000 1010 (1<<WGM11) | (1<<COM1C1)
 362:	8f b5       	in	r24, 0x2f	; 47
 364:	8a 60       	ori	r24, 0x0A	; 10
 366:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= 0x19;							// 0001 1001 (1<<WGM13) | (1<<WGM12) | (1<<CS10)
 368:	8e b5       	in	r24, 0x2e	; 46
 36a:	89 61       	ori	r24, 0x19	; 25
 36c:	8e bd       	out	0x2e, r24	; 46
	TCCR1C |= 0x00;							// PWM에선 C 안 씀
 36e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 372:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	TCNT1 = 0x0000;
 376:	1d bc       	out	0x2d, r1	; 45
 378:	1c bc       	out	0x2c, r1	; 44
	
	UCSR0A = 0x00;
 37a:	1b b8       	out	0x0b, r1	; 11
	UCSR0B = 0x18;
 37c:	88 e1       	ldi	r24, 0x18	; 24
 37e:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = 0x06;
 380:	86 e0       	ldi	r24, 0x06	; 6
 382:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
	
	UBRR0H = 0x00;
 386:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = 0x03;							// 115200 bps
 38a:	83 e0       	ldi	r24, 0x03	; 3
 38c:	89 b9       	out	0x09, r24	; 9
	
	ICR1 = 10;
 38e:	6a e0       	ldi	r22, 0x0A	; 10
 390:	70 e0       	ldi	r23, 0x00	; 0
 392:	77 bd       	out	0x27, r23	; 39
 394:	66 bd       	out	0x26, r22	; 38
	OCR1C = ICR1/10;
 396:	86 b5       	in	r24, 0x26	; 38
 398:	97 b5       	in	r25, 0x27	; 39
 39a:	7c d0       	rcall	.+248    	; 0x494 <__udivmodhi4>
 39c:	70 93 79 00 	sts	0x0079, r23	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 3a0:	60 93 78 00 	sts	0x0078, r22	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 3a4:	8e 01       	movw	r16, r28
 3a6:	0f 5f       	subi	r16, 0xFF	; 255
 3a8:	1f 4f       	sbci	r17, 0xFF	; 255
	
	i = 0;
	while(text[i] != '\0') putch(text[i++]);
 3aa:	f8 01       	movw	r30, r16
 3ac:	81 91       	ld	r24, Z+
 3ae:	8f 01       	movw	r16, r30
 3b0:	88 23       	and	r24, r24
 3b2:	11 f0       	breq	.+4      	; 0x3b8 <main+0x9a>
 3b4:	89 de       	rcall	.-750    	; 0xc8 <putch>
 3b6:	f9 cf       	rjmp	.-14     	; 0x3aa <main+0x8c>
	
	sei();
 3b8:	78 94       	sei
		putch(Rx_data);
		
		// PIANO
		if((Rx_data >= '0') && (Rx_data <= '7' ))
		{					
			ICR1 = 7372800 / DoReMi[Rx_data - '0'];
 3ba:	81 2c       	mov	r8, r1
 3bc:	90 e8       	ldi	r25, 0x80	; 128
 3be:	99 2e       	mov	r9, r25
 3c0:	90 e7       	ldi	r25, 0x70	; 112
 3c2:	a9 2e       	mov	r10, r25
 3c4:	b1 2c       	mov	r11, r1
			OCR1C = ICR1 / 10;
 3c6:	2a e0       	ldi	r18, 0x0A	; 10
 3c8:	e2 2e       	mov	r14, r18
 3ca:	f1 2c       	mov	r15, r1
	
	sei();
	
	while(1)
	{			
		Move_Flag = 0;
 3cc:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <__data_end>
 3d0:	8e 01       	movw	r16, r28
 3d2:	03 5a       	subi	r16, 0xA3	; 163
 3d4:	1f 4f       	sbci	r17, 0xFF	; 255
		i = 0;
		while(input[i] != '\0') putch(input[i++]);
 3d6:	f8 01       	movw	r30, r16
 3d8:	81 91       	ld	r24, Z+
 3da:	8f 01       	movw	r16, r30
 3dc:	88 23       	and	r24, r24
 3de:	11 f0       	breq	.+4      	; 0x3e4 <main+0xc6>
 3e0:	73 de       	rcall	.-794    	; 0xc8 <putch>
		Rx_data = getch();
 3e2:	f9 cf       	rjmp	.-14     	; 0x3d6 <main+0xb8>
 3e4:	76 de       	rcall	.-788    	; 0xd2 <getch>
 3e6:	18 2f       	mov	r17, r24
		putch(Rx_data);
 3e8:	6f de       	rcall	.-802    	; 0xc8 <putch>
 3ea:	80 ed       	ldi	r24, 0xD0	; 208
		
		// PIANO
		if((Rx_data >= '0') && (Rx_data <= '7' ))
 3ec:	81 0f       	add	r24, r17
 3ee:	e1 2f       	mov	r30, r17
		{					
			ICR1 = 7372800 / DoReMi[Rx_data - '0'];
 3f0:	88 30       	cpi	r24, 0x08	; 8
		while(input[i] != '\0') putch(input[i++]);
		Rx_data = getch();
		putch(Rx_data);
		
		// PIANO
		if((Rx_data >= '0') && (Rx_data <= '7' ))
 3f2:	68 f5       	brcc	.+90     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 3f4:	f0 e0       	ldi	r31, 0x00	; 0
		{					
			ICR1 = 7372800 / DoReMi[Rx_data - '0'];
 3f6:	ee 0f       	add	r30, r30
 3f8:	ff 1f       	adc	r31, r31
 3fa:	e0 56       	subi	r30, 0x60	; 96
 3fc:	ff 4f       	sbci	r31, 0xFF	; 255
 3fe:	20 81       	ld	r18, Z
 400:	31 81       	ldd	r19, Z+1	; 0x01
 402:	40 e0       	ldi	r20, 0x00	; 0
 404:	50 e0       	ldi	r21, 0x00	; 0
 406:	c5 01       	movw	r24, r10
 408:	b4 01       	movw	r22, r8
 40a:	58 d0       	rcall	.+176    	; 0x4bc <__divmodsi4>
 40c:	37 bd       	out	0x27, r19	; 39
 40e:	26 bd       	out	0x26, r18	; 38
			OCR1C = ICR1 / 10;
 410:	86 b5       	in	r24, 0x26	; 38
 412:	97 b5       	in	r25, 0x27	; 39
 414:	b7 01       	movw	r22, r14
 416:	3e d0       	rcall	.+124    	; 0x494 <__udivmodhi4>
 418:	70 93 79 00 	sts	0x0079, r23	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 41c:	60 93 78 00 	sts	0x0078, r22	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 420:	ff ef       	ldi	r31, 0xFF	; 255
 422:	2f e3       	ldi	r18, 0x3F	; 63
 424:	8b e0       	ldi	r24, 0x0B	; 11
 426:	f1 50       	subi	r31, 0x01	; 1
 428:	20 40       	sbci	r18, 0x00	; 0
 42a:	80 40       	sbci	r24, 0x00	; 0
 42c:	e1 f7       	brne	.-8      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 42e:	00 c0       	rjmp	.+0      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 430:	00 00       	nop
 432:	8f b5       	in	r24, 0x2f	; 47
					
			_delay_ms(500);
					
			TCCR1A |= 0x0A;
 434:	8a 60       	ori	r24, 0x0A	; 10
 436:	8f bd       	out	0x2f, r24	; 47
			ICR1 = 10;
 438:	f7 bc       	out	0x27, r15	; 39
 43a:	e6 bc       	out	0x26, r14	; 38
			OCR1C = ICR1/10;
 43c:	86 b5       	in	r24, 0x26	; 38
 43e:	97 b5       	in	r25, 0x27	; 39
 440:	b7 01       	movw	r22, r14
 442:	28 d0       	rcall	.+80     	; 0x494 <__udivmodhi4>
 444:	70 93 79 00 	sts	0x0079, r23	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 448:	60 93 78 00 	sts	0x0078, r22	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 44c:	bf cf       	rjmp	.-130    	; 0x3cc <main+0xae>
		}
		// CDS
		else if((Rx_data == 'c') || (Rx_data == 'C'))
 44e:	ef 7d       	andi	r30, 0xDF	; 223
 450:	e3 34       	cpi	r30, 0x43	; 67
 452:	11 f4       	brne	.+4      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
		{		
			CDS();	
 454:	01 df       	rcall	.-510    	; 0x258 <CDS>
			ICR1 = 10;
			OCR1C = ICR1/10;
		}
		// CDS
		else if((Rx_data == 'c') || (Rx_data == 'C'))
		{		
 456:	ba cf       	rjmp	.-140    	; 0x3cc <main+0xae>
			CDS();	
		}
		// Moter
		else if((Rx_data == 'S') || (Rx_data == 's'))
 458:	e3 35       	cpi	r30, 0x53	; 83
 45a:	11 f4       	brne	.+4      	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
		{
			Moter();
 45c:	75 de       	rcall	.-790    	; 0x148 <Moter>
 45e:	b6 cf       	rjmp	.-148    	; 0x3cc <main+0xae>
 460:	ec 34       	cpi	r30, 0x4C	; 76
		}
		// LED
		else if((Rx_data == 'l') || (Rx_data == 'L'))
 462:	09 f0       	breq	.+2      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 464:	b3 cf       	rjmp	.-154    	; 0x3cc <main+0xae>
 466:	3a de       	rcall	.-908    	; 0xdc <LED>
		{
			LED();
 468:	b1 cf       	rjmp	.-158    	; 0x3cc <main+0xae>

0000046a <__vector_1>:
 46a:	1f 92       	push	r1
 46c:	0f 92       	push	r0
	}
}

// LED, Moter, CDS 동작 정지
SIGNAL(INT0_vect)
{
 46e:	0f b6       	in	r0, 0x3f	; 63
 470:	0f 92       	push	r0
 472:	11 24       	eor	r1, r1
 474:	8f 93       	push	r24
	cli();
 476:	f8 94       	cli
	if(Move_Flag == 0) Move_Flag = 1;
 478:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <__data_end>
 47c:	81 11       	cpse	r24, r1
 47e:	03 c0       	rjmp	.+6      	; 0x486 <__vector_1+0x1c>
 480:	81 e0       	ldi	r24, 0x01	; 1
 482:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <__data_end>
	sei();
 486:	78 94       	sei
}
 488:	8f 91       	pop	r24
 48a:	0f 90       	pop	r0
 48c:	0f be       	out	0x3f, r0	; 63
 48e:	0f 90       	pop	r0
 490:	1f 90       	pop	r1
 492:	18 95       	reti

00000494 <__udivmodhi4>:
 494:	aa 1b       	sub	r26, r26
 496:	bb 1b       	sub	r27, r27
 498:	51 e1       	ldi	r21, 0x11	; 17
 49a:	07 c0       	rjmp	.+14     	; 0x4aa <__udivmodhi4_ep>

0000049c <__udivmodhi4_loop>:
 49c:	aa 1f       	adc	r26, r26
 49e:	bb 1f       	adc	r27, r27
 4a0:	a6 17       	cp	r26, r22
 4a2:	b7 07       	cpc	r27, r23
 4a4:	10 f0       	brcs	.+4      	; 0x4aa <__udivmodhi4_ep>
 4a6:	a6 1b       	sub	r26, r22
 4a8:	b7 0b       	sbc	r27, r23

000004aa <__udivmodhi4_ep>:
 4aa:	88 1f       	adc	r24, r24
 4ac:	99 1f       	adc	r25, r25
 4ae:	5a 95       	dec	r21
 4b0:	a9 f7       	brne	.-22     	; 0x49c <__udivmodhi4_loop>
 4b2:	80 95       	com	r24
 4b4:	90 95       	com	r25
 4b6:	bc 01       	movw	r22, r24
 4b8:	cd 01       	movw	r24, r26
 4ba:	08 95       	ret

000004bc <__divmodsi4>:
 4bc:	05 2e       	mov	r0, r21
 4be:	97 fb       	bst	r25, 7
 4c0:	16 f4       	brtc	.+4      	; 0x4c6 <__divmodsi4+0xa>
 4c2:	00 94       	com	r0
 4c4:	0f d0       	rcall	.+30     	; 0x4e4 <__negsi2>
 4c6:	57 fd       	sbrc	r21, 7
 4c8:	05 d0       	rcall	.+10     	; 0x4d4 <__divmodsi4_neg2>
 4ca:	14 d0       	rcall	.+40     	; 0x4f4 <__udivmodsi4>
 4cc:	07 fc       	sbrc	r0, 7
 4ce:	02 d0       	rcall	.+4      	; 0x4d4 <__divmodsi4_neg2>
 4d0:	46 f4       	brtc	.+16     	; 0x4e2 <__divmodsi4_exit>
 4d2:	08 c0       	rjmp	.+16     	; 0x4e4 <__negsi2>

000004d4 <__divmodsi4_neg2>:
 4d4:	50 95       	com	r21
 4d6:	40 95       	com	r20
 4d8:	30 95       	com	r19
 4da:	21 95       	neg	r18
 4dc:	3f 4f       	sbci	r19, 0xFF	; 255
 4de:	4f 4f       	sbci	r20, 0xFF	; 255
 4e0:	5f 4f       	sbci	r21, 0xFF	; 255

000004e2 <__divmodsi4_exit>:
 4e2:	08 95       	ret

000004e4 <__negsi2>:
 4e4:	90 95       	com	r25
 4e6:	80 95       	com	r24
 4e8:	70 95       	com	r23
 4ea:	61 95       	neg	r22
 4ec:	7f 4f       	sbci	r23, 0xFF	; 255
 4ee:	8f 4f       	sbci	r24, 0xFF	; 255
 4f0:	9f 4f       	sbci	r25, 0xFF	; 255
 4f2:	08 95       	ret

000004f4 <__udivmodsi4>:
 4f4:	a1 e2       	ldi	r26, 0x21	; 33
 4f6:	1a 2e       	mov	r1, r26
 4f8:	aa 1b       	sub	r26, r26
 4fa:	bb 1b       	sub	r27, r27
 4fc:	fd 01       	movw	r30, r26
 4fe:	0d c0       	rjmp	.+26     	; 0x51a <__udivmodsi4_ep>

00000500 <__udivmodsi4_loop>:
 500:	aa 1f       	adc	r26, r26
 502:	bb 1f       	adc	r27, r27
 504:	ee 1f       	adc	r30, r30
 506:	ff 1f       	adc	r31, r31
 508:	a2 17       	cp	r26, r18
 50a:	b3 07       	cpc	r27, r19
 50c:	e4 07       	cpc	r30, r20
 50e:	f5 07       	cpc	r31, r21
 510:	20 f0       	brcs	.+8      	; 0x51a <__udivmodsi4_ep>
 512:	a2 1b       	sub	r26, r18
 514:	b3 0b       	sbc	r27, r19
 516:	e4 0b       	sbc	r30, r20
 518:	f5 0b       	sbc	r31, r21

0000051a <__udivmodsi4_ep>:
 51a:	66 1f       	adc	r22, r22
 51c:	77 1f       	adc	r23, r23
 51e:	88 1f       	adc	r24, r24
 520:	99 1f       	adc	r25, r25
 522:	1a 94       	dec	r1
 524:	69 f7       	brne	.-38     	; 0x500 <__udivmodsi4_loop>
 526:	60 95       	com	r22
 528:	70 95       	com	r23
 52a:	80 95       	com	r24
 52c:	90 95       	com	r25
 52e:	9b 01       	movw	r18, r22
 530:	ac 01       	movw	r20, r24
 532:	bd 01       	movw	r22, r26
 534:	cf 01       	movw	r24, r30
 536:	08 95       	ret

00000538 <sprintf>:
 538:	0f 93       	push	r16
 53a:	1f 93       	push	r17
 53c:	cf 93       	push	r28
 53e:	df 93       	push	r29
 540:	cd b7       	in	r28, 0x3d	; 61
 542:	de b7       	in	r29, 0x3e	; 62
 544:	2e 97       	sbiw	r28, 0x0e	; 14
 546:	0f b6       	in	r0, 0x3f	; 63
 548:	f8 94       	cli
 54a:	de bf       	out	0x3e, r29	; 62
 54c:	0f be       	out	0x3f, r0	; 63
 54e:	cd bf       	out	0x3d, r28	; 61
 550:	0d 89       	ldd	r16, Y+21	; 0x15
 552:	1e 89       	ldd	r17, Y+22	; 0x16
 554:	86 e0       	ldi	r24, 0x06	; 6
 556:	8c 83       	std	Y+4, r24	; 0x04
 558:	1a 83       	std	Y+2, r17	; 0x02
 55a:	09 83       	std	Y+1, r16	; 0x01
 55c:	8f ef       	ldi	r24, 0xFF	; 255
 55e:	9f e7       	ldi	r25, 0x7F	; 127
 560:	9e 83       	std	Y+6, r25	; 0x06
 562:	8d 83       	std	Y+5, r24	; 0x05
 564:	ae 01       	movw	r20, r28
 566:	47 5e       	subi	r20, 0xE7	; 231
 568:	5f 4f       	sbci	r21, 0xFF	; 255
 56a:	6f 89       	ldd	r22, Y+23	; 0x17
 56c:	78 8d       	ldd	r23, Y+24	; 0x18
 56e:	ce 01       	movw	r24, r28
 570:	01 96       	adiw	r24, 0x01	; 1
 572:	10 d0       	rcall	.+32     	; 0x594 <vfprintf>
 574:	ef 81       	ldd	r30, Y+7	; 0x07
 576:	f8 85       	ldd	r31, Y+8	; 0x08
 578:	e0 0f       	add	r30, r16
 57a:	f1 1f       	adc	r31, r17
 57c:	10 82       	st	Z, r1
 57e:	2e 96       	adiw	r28, 0x0e	; 14
 580:	0f b6       	in	r0, 0x3f	; 63
 582:	f8 94       	cli
 584:	de bf       	out	0x3e, r29	; 62
 586:	0f be       	out	0x3f, r0	; 63
 588:	cd bf       	out	0x3d, r28	; 61
 58a:	df 91       	pop	r29
 58c:	cf 91       	pop	r28
 58e:	1f 91       	pop	r17
 590:	0f 91       	pop	r16
 592:	08 95       	ret

00000594 <vfprintf>:
 594:	2f 92       	push	r2
 596:	3f 92       	push	r3
 598:	4f 92       	push	r4
 59a:	5f 92       	push	r5
 59c:	6f 92       	push	r6
 59e:	7f 92       	push	r7
 5a0:	8f 92       	push	r8
 5a2:	9f 92       	push	r9
 5a4:	af 92       	push	r10
 5a6:	bf 92       	push	r11
 5a8:	cf 92       	push	r12
 5aa:	df 92       	push	r13
 5ac:	ef 92       	push	r14
 5ae:	ff 92       	push	r15
 5b0:	0f 93       	push	r16
 5b2:	1f 93       	push	r17
 5b4:	cf 93       	push	r28
 5b6:	df 93       	push	r29
 5b8:	cd b7       	in	r28, 0x3d	; 61
 5ba:	de b7       	in	r29, 0x3e	; 62
 5bc:	2b 97       	sbiw	r28, 0x0b	; 11
 5be:	0f b6       	in	r0, 0x3f	; 63
 5c0:	f8 94       	cli
 5c2:	de bf       	out	0x3e, r29	; 62
 5c4:	0f be       	out	0x3f, r0	; 63
 5c6:	cd bf       	out	0x3d, r28	; 61
 5c8:	6c 01       	movw	r12, r24
 5ca:	7b 01       	movw	r14, r22
 5cc:	8a 01       	movw	r16, r20
 5ce:	fc 01       	movw	r30, r24
 5d0:	17 82       	std	Z+7, r1	; 0x07
 5d2:	16 82       	std	Z+6, r1	; 0x06
 5d4:	83 81       	ldd	r24, Z+3	; 0x03
 5d6:	81 ff       	sbrs	r24, 1
 5d8:	bf c1       	rjmp	.+894    	; 0x958 <vfprintf+0x3c4>
 5da:	ce 01       	movw	r24, r28
 5dc:	01 96       	adiw	r24, 0x01	; 1
 5de:	3c 01       	movw	r6, r24
 5e0:	f6 01       	movw	r30, r12
 5e2:	93 81       	ldd	r25, Z+3	; 0x03
 5e4:	f7 01       	movw	r30, r14
 5e6:	93 fd       	sbrc	r25, 3
 5e8:	85 91       	lpm	r24, Z+
 5ea:	93 ff       	sbrs	r25, 3
 5ec:	81 91       	ld	r24, Z+
 5ee:	7f 01       	movw	r14, r30
 5f0:	88 23       	and	r24, r24
 5f2:	09 f4       	brne	.+2      	; 0x5f6 <vfprintf+0x62>
 5f4:	ad c1       	rjmp	.+858    	; 0x950 <vfprintf+0x3bc>
 5f6:	85 32       	cpi	r24, 0x25	; 37
 5f8:	39 f4       	brne	.+14     	; 0x608 <vfprintf+0x74>
 5fa:	93 fd       	sbrc	r25, 3
 5fc:	85 91       	lpm	r24, Z+
 5fe:	93 ff       	sbrs	r25, 3
 600:	81 91       	ld	r24, Z+
 602:	7f 01       	movw	r14, r30
 604:	85 32       	cpi	r24, 0x25	; 37
 606:	21 f4       	brne	.+8      	; 0x610 <vfprintf+0x7c>
 608:	b6 01       	movw	r22, r12
 60a:	90 e0       	ldi	r25, 0x00	; 0
 60c:	d6 d1       	rcall	.+940    	; 0x9ba <fputc>
 60e:	e8 cf       	rjmp	.-48     	; 0x5e0 <vfprintf+0x4c>
 610:	91 2c       	mov	r9, r1
 612:	21 2c       	mov	r2, r1
 614:	31 2c       	mov	r3, r1
 616:	ff e1       	ldi	r31, 0x1F	; 31
 618:	f3 15       	cp	r31, r3
 61a:	d8 f0       	brcs	.+54     	; 0x652 <vfprintf+0xbe>
 61c:	8b 32       	cpi	r24, 0x2B	; 43
 61e:	79 f0       	breq	.+30     	; 0x63e <vfprintf+0xaa>
 620:	38 f4       	brcc	.+14     	; 0x630 <vfprintf+0x9c>
 622:	80 32       	cpi	r24, 0x20	; 32
 624:	79 f0       	breq	.+30     	; 0x644 <vfprintf+0xb0>
 626:	83 32       	cpi	r24, 0x23	; 35
 628:	a1 f4       	brne	.+40     	; 0x652 <vfprintf+0xbe>
 62a:	23 2d       	mov	r18, r3
 62c:	20 61       	ori	r18, 0x10	; 16
 62e:	1d c0       	rjmp	.+58     	; 0x66a <vfprintf+0xd6>
 630:	8d 32       	cpi	r24, 0x2D	; 45
 632:	61 f0       	breq	.+24     	; 0x64c <vfprintf+0xb8>
 634:	80 33       	cpi	r24, 0x30	; 48
 636:	69 f4       	brne	.+26     	; 0x652 <vfprintf+0xbe>
 638:	23 2d       	mov	r18, r3
 63a:	21 60       	ori	r18, 0x01	; 1
 63c:	16 c0       	rjmp	.+44     	; 0x66a <vfprintf+0xd6>
 63e:	83 2d       	mov	r24, r3
 640:	82 60       	ori	r24, 0x02	; 2
 642:	38 2e       	mov	r3, r24
 644:	e3 2d       	mov	r30, r3
 646:	e4 60       	ori	r30, 0x04	; 4
 648:	3e 2e       	mov	r3, r30
 64a:	2a c0       	rjmp	.+84     	; 0x6a0 <vfprintf+0x10c>
 64c:	f3 2d       	mov	r31, r3
 64e:	f8 60       	ori	r31, 0x08	; 8
 650:	1d c0       	rjmp	.+58     	; 0x68c <vfprintf+0xf8>
 652:	37 fc       	sbrc	r3, 7
 654:	2d c0       	rjmp	.+90     	; 0x6b0 <vfprintf+0x11c>
 656:	20 ed       	ldi	r18, 0xD0	; 208
 658:	28 0f       	add	r18, r24
 65a:	2a 30       	cpi	r18, 0x0A	; 10
 65c:	40 f0       	brcs	.+16     	; 0x66e <vfprintf+0xda>
 65e:	8e 32       	cpi	r24, 0x2E	; 46
 660:	b9 f4       	brne	.+46     	; 0x690 <vfprintf+0xfc>
 662:	36 fc       	sbrc	r3, 6
 664:	75 c1       	rjmp	.+746    	; 0x950 <vfprintf+0x3bc>
 666:	23 2d       	mov	r18, r3
 668:	20 64       	ori	r18, 0x40	; 64
 66a:	32 2e       	mov	r3, r18
 66c:	19 c0       	rjmp	.+50     	; 0x6a0 <vfprintf+0x10c>
 66e:	36 fe       	sbrs	r3, 6
 670:	06 c0       	rjmp	.+12     	; 0x67e <vfprintf+0xea>
 672:	8a e0       	ldi	r24, 0x0A	; 10
 674:	98 9e       	mul	r9, r24
 676:	20 0d       	add	r18, r0
 678:	11 24       	eor	r1, r1
 67a:	92 2e       	mov	r9, r18
 67c:	11 c0       	rjmp	.+34     	; 0x6a0 <vfprintf+0x10c>
 67e:	ea e0       	ldi	r30, 0x0A	; 10
 680:	2e 9e       	mul	r2, r30
 682:	20 0d       	add	r18, r0
 684:	11 24       	eor	r1, r1
 686:	22 2e       	mov	r2, r18
 688:	f3 2d       	mov	r31, r3
 68a:	f0 62       	ori	r31, 0x20	; 32
 68c:	3f 2e       	mov	r3, r31
 68e:	08 c0       	rjmp	.+16     	; 0x6a0 <vfprintf+0x10c>
 690:	8c 36       	cpi	r24, 0x6C	; 108
 692:	21 f4       	brne	.+8      	; 0x69c <vfprintf+0x108>
 694:	83 2d       	mov	r24, r3
 696:	80 68       	ori	r24, 0x80	; 128
 698:	38 2e       	mov	r3, r24
 69a:	02 c0       	rjmp	.+4      	; 0x6a0 <vfprintf+0x10c>
 69c:	88 36       	cpi	r24, 0x68	; 104
 69e:	41 f4       	brne	.+16     	; 0x6b0 <vfprintf+0x11c>
 6a0:	f7 01       	movw	r30, r14
 6a2:	93 fd       	sbrc	r25, 3
 6a4:	85 91       	lpm	r24, Z+
 6a6:	93 ff       	sbrs	r25, 3
 6a8:	81 91       	ld	r24, Z+
 6aa:	7f 01       	movw	r14, r30
 6ac:	81 11       	cpse	r24, r1
 6ae:	b3 cf       	rjmp	.-154    	; 0x616 <vfprintf+0x82>
 6b0:	98 2f       	mov	r25, r24
 6b2:	9f 7d       	andi	r25, 0xDF	; 223
 6b4:	95 54       	subi	r25, 0x45	; 69
 6b6:	93 30       	cpi	r25, 0x03	; 3
 6b8:	28 f4       	brcc	.+10     	; 0x6c4 <vfprintf+0x130>
 6ba:	0c 5f       	subi	r16, 0xFC	; 252
 6bc:	1f 4f       	sbci	r17, 0xFF	; 255
 6be:	9f e3       	ldi	r25, 0x3F	; 63
 6c0:	99 83       	std	Y+1, r25	; 0x01
 6c2:	0d c0       	rjmp	.+26     	; 0x6de <vfprintf+0x14a>
 6c4:	83 36       	cpi	r24, 0x63	; 99
 6c6:	31 f0       	breq	.+12     	; 0x6d4 <vfprintf+0x140>
 6c8:	83 37       	cpi	r24, 0x73	; 115
 6ca:	71 f0       	breq	.+28     	; 0x6e8 <vfprintf+0x154>
 6cc:	83 35       	cpi	r24, 0x53	; 83
 6ce:	09 f0       	breq	.+2      	; 0x6d2 <vfprintf+0x13e>
 6d0:	55 c0       	rjmp	.+170    	; 0x77c <vfprintf+0x1e8>
 6d2:	20 c0       	rjmp	.+64     	; 0x714 <vfprintf+0x180>
 6d4:	f8 01       	movw	r30, r16
 6d6:	80 81       	ld	r24, Z
 6d8:	89 83       	std	Y+1, r24	; 0x01
 6da:	0e 5f       	subi	r16, 0xFE	; 254
 6dc:	1f 4f       	sbci	r17, 0xFF	; 255
 6de:	88 24       	eor	r8, r8
 6e0:	83 94       	inc	r8
 6e2:	91 2c       	mov	r9, r1
 6e4:	53 01       	movw	r10, r6
 6e6:	12 c0       	rjmp	.+36     	; 0x70c <vfprintf+0x178>
 6e8:	28 01       	movw	r4, r16
 6ea:	f2 e0       	ldi	r31, 0x02	; 2
 6ec:	4f 0e       	add	r4, r31
 6ee:	51 1c       	adc	r5, r1
 6f0:	f8 01       	movw	r30, r16
 6f2:	a0 80       	ld	r10, Z
 6f4:	b1 80       	ldd	r11, Z+1	; 0x01
 6f6:	36 fe       	sbrs	r3, 6
 6f8:	03 c0       	rjmp	.+6      	; 0x700 <vfprintf+0x16c>
 6fa:	69 2d       	mov	r22, r9
 6fc:	70 e0       	ldi	r23, 0x00	; 0
 6fe:	02 c0       	rjmp	.+4      	; 0x704 <vfprintf+0x170>
 700:	6f ef       	ldi	r22, 0xFF	; 255
 702:	7f ef       	ldi	r23, 0xFF	; 255
 704:	c5 01       	movw	r24, r10
 706:	4e d1       	rcall	.+668    	; 0x9a4 <strnlen>
 708:	4c 01       	movw	r8, r24
 70a:	82 01       	movw	r16, r4
 70c:	f3 2d       	mov	r31, r3
 70e:	ff 77       	andi	r31, 0x7F	; 127
 710:	3f 2e       	mov	r3, r31
 712:	15 c0       	rjmp	.+42     	; 0x73e <vfprintf+0x1aa>
 714:	28 01       	movw	r4, r16
 716:	22 e0       	ldi	r18, 0x02	; 2
 718:	42 0e       	add	r4, r18
 71a:	51 1c       	adc	r5, r1
 71c:	f8 01       	movw	r30, r16
 71e:	a0 80       	ld	r10, Z
 720:	b1 80       	ldd	r11, Z+1	; 0x01
 722:	36 fe       	sbrs	r3, 6
 724:	03 c0       	rjmp	.+6      	; 0x72c <vfprintf+0x198>
 726:	69 2d       	mov	r22, r9
 728:	70 e0       	ldi	r23, 0x00	; 0
 72a:	02 c0       	rjmp	.+4      	; 0x730 <vfprintf+0x19c>
 72c:	6f ef       	ldi	r22, 0xFF	; 255
 72e:	7f ef       	ldi	r23, 0xFF	; 255
 730:	c5 01       	movw	r24, r10
 732:	2d d1       	rcall	.+602    	; 0x98e <strnlen_P>
 734:	4c 01       	movw	r8, r24
 736:	f3 2d       	mov	r31, r3
 738:	f0 68       	ori	r31, 0x80	; 128
 73a:	3f 2e       	mov	r3, r31
 73c:	82 01       	movw	r16, r4
 73e:	33 fc       	sbrc	r3, 3
 740:	19 c0       	rjmp	.+50     	; 0x774 <vfprintf+0x1e0>
 742:	82 2d       	mov	r24, r2
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	88 16       	cp	r8, r24
 748:	99 06       	cpc	r9, r25
 74a:	a0 f4       	brcc	.+40     	; 0x774 <vfprintf+0x1e0>
 74c:	b6 01       	movw	r22, r12
 74e:	80 e2       	ldi	r24, 0x20	; 32
 750:	90 e0       	ldi	r25, 0x00	; 0
 752:	33 d1       	rcall	.+614    	; 0x9ba <fputc>
 754:	2a 94       	dec	r2
 756:	f5 cf       	rjmp	.-22     	; 0x742 <vfprintf+0x1ae>
 758:	f5 01       	movw	r30, r10
 75a:	37 fc       	sbrc	r3, 7
 75c:	85 91       	lpm	r24, Z+
 75e:	37 fe       	sbrs	r3, 7
 760:	81 91       	ld	r24, Z+
 762:	5f 01       	movw	r10, r30
 764:	b6 01       	movw	r22, r12
 766:	90 e0       	ldi	r25, 0x00	; 0
 768:	28 d1       	rcall	.+592    	; 0x9ba <fputc>
 76a:	21 10       	cpse	r2, r1
 76c:	2a 94       	dec	r2
 76e:	21 e0       	ldi	r18, 0x01	; 1
 770:	82 1a       	sub	r8, r18
 772:	91 08       	sbc	r9, r1
 774:	81 14       	cp	r8, r1
 776:	91 04       	cpc	r9, r1
 778:	79 f7       	brne	.-34     	; 0x758 <vfprintf+0x1c4>
 77a:	e1 c0       	rjmp	.+450    	; 0x93e <vfprintf+0x3aa>
 77c:	84 36       	cpi	r24, 0x64	; 100
 77e:	11 f0       	breq	.+4      	; 0x784 <vfprintf+0x1f0>
 780:	89 36       	cpi	r24, 0x69	; 105
 782:	39 f5       	brne	.+78     	; 0x7d2 <vfprintf+0x23e>
 784:	f8 01       	movw	r30, r16
 786:	37 fe       	sbrs	r3, 7
 788:	07 c0       	rjmp	.+14     	; 0x798 <vfprintf+0x204>
 78a:	60 81       	ld	r22, Z
 78c:	71 81       	ldd	r23, Z+1	; 0x01
 78e:	82 81       	ldd	r24, Z+2	; 0x02
 790:	93 81       	ldd	r25, Z+3	; 0x03
 792:	0c 5f       	subi	r16, 0xFC	; 252
 794:	1f 4f       	sbci	r17, 0xFF	; 255
 796:	08 c0       	rjmp	.+16     	; 0x7a8 <vfprintf+0x214>
 798:	60 81       	ld	r22, Z
 79a:	71 81       	ldd	r23, Z+1	; 0x01
 79c:	07 2e       	mov	r0, r23
 79e:	00 0c       	add	r0, r0
 7a0:	88 0b       	sbc	r24, r24
 7a2:	99 0b       	sbc	r25, r25
 7a4:	0e 5f       	subi	r16, 0xFE	; 254
 7a6:	1f 4f       	sbci	r17, 0xFF	; 255
 7a8:	f3 2d       	mov	r31, r3
 7aa:	ff 76       	andi	r31, 0x6F	; 111
 7ac:	3f 2e       	mov	r3, r31
 7ae:	97 ff       	sbrs	r25, 7
 7b0:	09 c0       	rjmp	.+18     	; 0x7c4 <vfprintf+0x230>
 7b2:	90 95       	com	r25
 7b4:	80 95       	com	r24
 7b6:	70 95       	com	r23
 7b8:	61 95       	neg	r22
 7ba:	7f 4f       	sbci	r23, 0xFF	; 255
 7bc:	8f 4f       	sbci	r24, 0xFF	; 255
 7be:	9f 4f       	sbci	r25, 0xFF	; 255
 7c0:	f0 68       	ori	r31, 0x80	; 128
 7c2:	3f 2e       	mov	r3, r31
 7c4:	2a e0       	ldi	r18, 0x0A	; 10
 7c6:	30 e0       	ldi	r19, 0x00	; 0
 7c8:	a3 01       	movw	r20, r6
 7ca:	33 d1       	rcall	.+614    	; 0xa32 <__ultoa_invert>
 7cc:	88 2e       	mov	r8, r24
 7ce:	86 18       	sub	r8, r6
 7d0:	44 c0       	rjmp	.+136    	; 0x85a <vfprintf+0x2c6>
 7d2:	85 37       	cpi	r24, 0x75	; 117
 7d4:	31 f4       	brne	.+12     	; 0x7e2 <vfprintf+0x24e>
 7d6:	23 2d       	mov	r18, r3
 7d8:	2f 7e       	andi	r18, 0xEF	; 239
 7da:	b2 2e       	mov	r11, r18
 7dc:	2a e0       	ldi	r18, 0x0A	; 10
 7de:	30 e0       	ldi	r19, 0x00	; 0
 7e0:	25 c0       	rjmp	.+74     	; 0x82c <vfprintf+0x298>
 7e2:	93 2d       	mov	r25, r3
 7e4:	99 7f       	andi	r25, 0xF9	; 249
 7e6:	b9 2e       	mov	r11, r25
 7e8:	8f 36       	cpi	r24, 0x6F	; 111
 7ea:	c1 f0       	breq	.+48     	; 0x81c <vfprintf+0x288>
 7ec:	18 f4       	brcc	.+6      	; 0x7f4 <vfprintf+0x260>
 7ee:	88 35       	cpi	r24, 0x58	; 88
 7f0:	79 f0       	breq	.+30     	; 0x810 <vfprintf+0x27c>
 7f2:	ae c0       	rjmp	.+348    	; 0x950 <vfprintf+0x3bc>
 7f4:	80 37       	cpi	r24, 0x70	; 112
 7f6:	19 f0       	breq	.+6      	; 0x7fe <vfprintf+0x26a>
 7f8:	88 37       	cpi	r24, 0x78	; 120
 7fa:	21 f0       	breq	.+8      	; 0x804 <vfprintf+0x270>
 7fc:	a9 c0       	rjmp	.+338    	; 0x950 <vfprintf+0x3bc>
 7fe:	e9 2f       	mov	r30, r25
 800:	e0 61       	ori	r30, 0x10	; 16
 802:	be 2e       	mov	r11, r30
 804:	b4 fe       	sbrs	r11, 4
 806:	0d c0       	rjmp	.+26     	; 0x822 <vfprintf+0x28e>
 808:	fb 2d       	mov	r31, r11
 80a:	f4 60       	ori	r31, 0x04	; 4
 80c:	bf 2e       	mov	r11, r31
 80e:	09 c0       	rjmp	.+18     	; 0x822 <vfprintf+0x28e>
 810:	34 fe       	sbrs	r3, 4
 812:	0a c0       	rjmp	.+20     	; 0x828 <vfprintf+0x294>
 814:	29 2f       	mov	r18, r25
 816:	26 60       	ori	r18, 0x06	; 6
 818:	b2 2e       	mov	r11, r18
 81a:	06 c0       	rjmp	.+12     	; 0x828 <vfprintf+0x294>
 81c:	28 e0       	ldi	r18, 0x08	; 8
 81e:	30 e0       	ldi	r19, 0x00	; 0
 820:	05 c0       	rjmp	.+10     	; 0x82c <vfprintf+0x298>
 822:	20 e1       	ldi	r18, 0x10	; 16
 824:	30 e0       	ldi	r19, 0x00	; 0
 826:	02 c0       	rjmp	.+4      	; 0x82c <vfprintf+0x298>
 828:	20 e1       	ldi	r18, 0x10	; 16
 82a:	32 e0       	ldi	r19, 0x02	; 2
 82c:	f8 01       	movw	r30, r16
 82e:	b7 fe       	sbrs	r11, 7
 830:	07 c0       	rjmp	.+14     	; 0x840 <vfprintf+0x2ac>
 832:	60 81       	ld	r22, Z
 834:	71 81       	ldd	r23, Z+1	; 0x01
 836:	82 81       	ldd	r24, Z+2	; 0x02
 838:	93 81       	ldd	r25, Z+3	; 0x03
 83a:	0c 5f       	subi	r16, 0xFC	; 252
 83c:	1f 4f       	sbci	r17, 0xFF	; 255
 83e:	06 c0       	rjmp	.+12     	; 0x84c <vfprintf+0x2b8>
 840:	60 81       	ld	r22, Z
 842:	71 81       	ldd	r23, Z+1	; 0x01
 844:	80 e0       	ldi	r24, 0x00	; 0
 846:	90 e0       	ldi	r25, 0x00	; 0
 848:	0e 5f       	subi	r16, 0xFE	; 254
 84a:	1f 4f       	sbci	r17, 0xFF	; 255
 84c:	a3 01       	movw	r20, r6
 84e:	f1 d0       	rcall	.+482    	; 0xa32 <__ultoa_invert>
 850:	88 2e       	mov	r8, r24
 852:	86 18       	sub	r8, r6
 854:	fb 2d       	mov	r31, r11
 856:	ff 77       	andi	r31, 0x7F	; 127
 858:	3f 2e       	mov	r3, r31
 85a:	36 fe       	sbrs	r3, 6
 85c:	0d c0       	rjmp	.+26     	; 0x878 <vfprintf+0x2e4>
 85e:	23 2d       	mov	r18, r3
 860:	2e 7f       	andi	r18, 0xFE	; 254
 862:	a2 2e       	mov	r10, r18
 864:	89 14       	cp	r8, r9
 866:	58 f4       	brcc	.+22     	; 0x87e <vfprintf+0x2ea>
 868:	34 fe       	sbrs	r3, 4
 86a:	0b c0       	rjmp	.+22     	; 0x882 <vfprintf+0x2ee>
 86c:	32 fc       	sbrc	r3, 2
 86e:	09 c0       	rjmp	.+18     	; 0x882 <vfprintf+0x2ee>
 870:	83 2d       	mov	r24, r3
 872:	8e 7e       	andi	r24, 0xEE	; 238
 874:	a8 2e       	mov	r10, r24
 876:	05 c0       	rjmp	.+10     	; 0x882 <vfprintf+0x2ee>
 878:	b8 2c       	mov	r11, r8
 87a:	a3 2c       	mov	r10, r3
 87c:	03 c0       	rjmp	.+6      	; 0x884 <vfprintf+0x2f0>
 87e:	b8 2c       	mov	r11, r8
 880:	01 c0       	rjmp	.+2      	; 0x884 <vfprintf+0x2f0>
 882:	b9 2c       	mov	r11, r9
 884:	a4 fe       	sbrs	r10, 4
 886:	0f c0       	rjmp	.+30     	; 0x8a6 <vfprintf+0x312>
 888:	fe 01       	movw	r30, r28
 88a:	e8 0d       	add	r30, r8
 88c:	f1 1d       	adc	r31, r1
 88e:	80 81       	ld	r24, Z
 890:	80 33       	cpi	r24, 0x30	; 48
 892:	21 f4       	brne	.+8      	; 0x89c <vfprintf+0x308>
 894:	9a 2d       	mov	r25, r10
 896:	99 7e       	andi	r25, 0xE9	; 233
 898:	a9 2e       	mov	r10, r25
 89a:	09 c0       	rjmp	.+18     	; 0x8ae <vfprintf+0x31a>
 89c:	a2 fe       	sbrs	r10, 2
 89e:	06 c0       	rjmp	.+12     	; 0x8ac <vfprintf+0x318>
 8a0:	b3 94       	inc	r11
 8a2:	b3 94       	inc	r11
 8a4:	04 c0       	rjmp	.+8      	; 0x8ae <vfprintf+0x31a>
 8a6:	8a 2d       	mov	r24, r10
 8a8:	86 78       	andi	r24, 0x86	; 134
 8aa:	09 f0       	breq	.+2      	; 0x8ae <vfprintf+0x31a>
 8ac:	b3 94       	inc	r11
 8ae:	a3 fc       	sbrc	r10, 3
 8b0:	10 c0       	rjmp	.+32     	; 0x8d2 <vfprintf+0x33e>
 8b2:	a0 fe       	sbrs	r10, 0
 8b4:	06 c0       	rjmp	.+12     	; 0x8c2 <vfprintf+0x32e>
 8b6:	b2 14       	cp	r11, r2
 8b8:	80 f4       	brcc	.+32     	; 0x8da <vfprintf+0x346>
 8ba:	28 0c       	add	r2, r8
 8bc:	92 2c       	mov	r9, r2
 8be:	9b 18       	sub	r9, r11
 8c0:	0d c0       	rjmp	.+26     	; 0x8dc <vfprintf+0x348>
 8c2:	b2 14       	cp	r11, r2
 8c4:	58 f4       	brcc	.+22     	; 0x8dc <vfprintf+0x348>
 8c6:	b6 01       	movw	r22, r12
 8c8:	80 e2       	ldi	r24, 0x20	; 32
 8ca:	90 e0       	ldi	r25, 0x00	; 0
 8cc:	76 d0       	rcall	.+236    	; 0x9ba <fputc>
 8ce:	b3 94       	inc	r11
 8d0:	f8 cf       	rjmp	.-16     	; 0x8c2 <vfprintf+0x32e>
 8d2:	b2 14       	cp	r11, r2
 8d4:	18 f4       	brcc	.+6      	; 0x8dc <vfprintf+0x348>
 8d6:	2b 18       	sub	r2, r11
 8d8:	02 c0       	rjmp	.+4      	; 0x8de <vfprintf+0x34a>
 8da:	98 2c       	mov	r9, r8
 8dc:	21 2c       	mov	r2, r1
 8de:	a4 fe       	sbrs	r10, 4
 8e0:	0f c0       	rjmp	.+30     	; 0x900 <vfprintf+0x36c>
 8e2:	b6 01       	movw	r22, r12
 8e4:	80 e3       	ldi	r24, 0x30	; 48
 8e6:	90 e0       	ldi	r25, 0x00	; 0
 8e8:	68 d0       	rcall	.+208    	; 0x9ba <fputc>
 8ea:	a2 fe       	sbrs	r10, 2
 8ec:	16 c0       	rjmp	.+44     	; 0x91a <vfprintf+0x386>
 8ee:	a1 fc       	sbrc	r10, 1
 8f0:	03 c0       	rjmp	.+6      	; 0x8f8 <vfprintf+0x364>
 8f2:	88 e7       	ldi	r24, 0x78	; 120
 8f4:	90 e0       	ldi	r25, 0x00	; 0
 8f6:	02 c0       	rjmp	.+4      	; 0x8fc <vfprintf+0x368>
 8f8:	88 e5       	ldi	r24, 0x58	; 88
 8fa:	90 e0       	ldi	r25, 0x00	; 0
 8fc:	b6 01       	movw	r22, r12
 8fe:	0c c0       	rjmp	.+24     	; 0x918 <vfprintf+0x384>
 900:	8a 2d       	mov	r24, r10
 902:	86 78       	andi	r24, 0x86	; 134
 904:	51 f0       	breq	.+20     	; 0x91a <vfprintf+0x386>
 906:	a1 fe       	sbrs	r10, 1
 908:	02 c0       	rjmp	.+4      	; 0x90e <vfprintf+0x37a>
 90a:	8b e2       	ldi	r24, 0x2B	; 43
 90c:	01 c0       	rjmp	.+2      	; 0x910 <vfprintf+0x37c>
 90e:	80 e2       	ldi	r24, 0x20	; 32
 910:	a7 fc       	sbrc	r10, 7
 912:	8d e2       	ldi	r24, 0x2D	; 45
 914:	b6 01       	movw	r22, r12
 916:	90 e0       	ldi	r25, 0x00	; 0
 918:	50 d0       	rcall	.+160    	; 0x9ba <fputc>
 91a:	89 14       	cp	r8, r9
 91c:	30 f4       	brcc	.+12     	; 0x92a <vfprintf+0x396>
 91e:	b6 01       	movw	r22, r12
 920:	80 e3       	ldi	r24, 0x30	; 48
 922:	90 e0       	ldi	r25, 0x00	; 0
 924:	4a d0       	rcall	.+148    	; 0x9ba <fputc>
 926:	9a 94       	dec	r9
 928:	f8 cf       	rjmp	.-16     	; 0x91a <vfprintf+0x386>
 92a:	8a 94       	dec	r8
 92c:	f3 01       	movw	r30, r6
 92e:	e8 0d       	add	r30, r8
 930:	f1 1d       	adc	r31, r1
 932:	80 81       	ld	r24, Z
 934:	b6 01       	movw	r22, r12
 936:	90 e0       	ldi	r25, 0x00	; 0
 938:	40 d0       	rcall	.+128    	; 0x9ba <fputc>
 93a:	81 10       	cpse	r8, r1
 93c:	f6 cf       	rjmp	.-20     	; 0x92a <vfprintf+0x396>
 93e:	22 20       	and	r2, r2
 940:	09 f4       	brne	.+2      	; 0x944 <vfprintf+0x3b0>
 942:	4e ce       	rjmp	.-868    	; 0x5e0 <vfprintf+0x4c>
 944:	b6 01       	movw	r22, r12
 946:	80 e2       	ldi	r24, 0x20	; 32
 948:	90 e0       	ldi	r25, 0x00	; 0
 94a:	37 d0       	rcall	.+110    	; 0x9ba <fputc>
 94c:	2a 94       	dec	r2
 94e:	f7 cf       	rjmp	.-18     	; 0x93e <vfprintf+0x3aa>
 950:	f6 01       	movw	r30, r12
 952:	86 81       	ldd	r24, Z+6	; 0x06
 954:	97 81       	ldd	r25, Z+7	; 0x07
 956:	02 c0       	rjmp	.+4      	; 0x95c <vfprintf+0x3c8>
 958:	8f ef       	ldi	r24, 0xFF	; 255
 95a:	9f ef       	ldi	r25, 0xFF	; 255
 95c:	2b 96       	adiw	r28, 0x0b	; 11
 95e:	0f b6       	in	r0, 0x3f	; 63
 960:	f8 94       	cli
 962:	de bf       	out	0x3e, r29	; 62
 964:	0f be       	out	0x3f, r0	; 63
 966:	cd bf       	out	0x3d, r28	; 61
 968:	df 91       	pop	r29
 96a:	cf 91       	pop	r28
 96c:	1f 91       	pop	r17
 96e:	0f 91       	pop	r16
 970:	ff 90       	pop	r15
 972:	ef 90       	pop	r14
 974:	df 90       	pop	r13
 976:	cf 90       	pop	r12
 978:	bf 90       	pop	r11
 97a:	af 90       	pop	r10
 97c:	9f 90       	pop	r9
 97e:	8f 90       	pop	r8
 980:	7f 90       	pop	r7
 982:	6f 90       	pop	r6
 984:	5f 90       	pop	r5
 986:	4f 90       	pop	r4
 988:	3f 90       	pop	r3
 98a:	2f 90       	pop	r2
 98c:	08 95       	ret

0000098e <strnlen_P>:
 98e:	fc 01       	movw	r30, r24
 990:	05 90       	lpm	r0, Z+
 992:	61 50       	subi	r22, 0x01	; 1
 994:	70 40       	sbci	r23, 0x00	; 0
 996:	01 10       	cpse	r0, r1
 998:	d8 f7       	brcc	.-10     	; 0x990 <strnlen_P+0x2>
 99a:	80 95       	com	r24
 99c:	90 95       	com	r25
 99e:	8e 0f       	add	r24, r30
 9a0:	9f 1f       	adc	r25, r31
 9a2:	08 95       	ret

000009a4 <strnlen>:
 9a4:	fc 01       	movw	r30, r24
 9a6:	61 50       	subi	r22, 0x01	; 1
 9a8:	70 40       	sbci	r23, 0x00	; 0
 9aa:	01 90       	ld	r0, Z+
 9ac:	01 10       	cpse	r0, r1
 9ae:	d8 f7       	brcc	.-10     	; 0x9a6 <strnlen+0x2>
 9b0:	80 95       	com	r24
 9b2:	90 95       	com	r25
 9b4:	8e 0f       	add	r24, r30
 9b6:	9f 1f       	adc	r25, r31
 9b8:	08 95       	ret

000009ba <fputc>:
 9ba:	0f 93       	push	r16
 9bc:	1f 93       	push	r17
 9be:	cf 93       	push	r28
 9c0:	df 93       	push	r29
 9c2:	fb 01       	movw	r30, r22
 9c4:	23 81       	ldd	r18, Z+3	; 0x03
 9c6:	21 fd       	sbrc	r18, 1
 9c8:	03 c0       	rjmp	.+6      	; 0x9d0 <fputc+0x16>
 9ca:	8f ef       	ldi	r24, 0xFF	; 255
 9cc:	9f ef       	ldi	r25, 0xFF	; 255
 9ce:	2c c0       	rjmp	.+88     	; 0xa28 <fputc+0x6e>
 9d0:	22 ff       	sbrs	r18, 2
 9d2:	16 c0       	rjmp	.+44     	; 0xa00 <fputc+0x46>
 9d4:	46 81       	ldd	r20, Z+6	; 0x06
 9d6:	57 81       	ldd	r21, Z+7	; 0x07
 9d8:	24 81       	ldd	r18, Z+4	; 0x04
 9da:	35 81       	ldd	r19, Z+5	; 0x05
 9dc:	42 17       	cp	r20, r18
 9de:	53 07       	cpc	r21, r19
 9e0:	44 f4       	brge	.+16     	; 0x9f2 <fputc+0x38>
 9e2:	a0 81       	ld	r26, Z
 9e4:	b1 81       	ldd	r27, Z+1	; 0x01
 9e6:	9d 01       	movw	r18, r26
 9e8:	2f 5f       	subi	r18, 0xFF	; 255
 9ea:	3f 4f       	sbci	r19, 0xFF	; 255
 9ec:	31 83       	std	Z+1, r19	; 0x01
 9ee:	20 83       	st	Z, r18
 9f0:	8c 93       	st	X, r24
 9f2:	26 81       	ldd	r18, Z+6	; 0x06
 9f4:	37 81       	ldd	r19, Z+7	; 0x07
 9f6:	2f 5f       	subi	r18, 0xFF	; 255
 9f8:	3f 4f       	sbci	r19, 0xFF	; 255
 9fa:	37 83       	std	Z+7, r19	; 0x07
 9fc:	26 83       	std	Z+6, r18	; 0x06
 9fe:	14 c0       	rjmp	.+40     	; 0xa28 <fputc+0x6e>
 a00:	8b 01       	movw	r16, r22
 a02:	ec 01       	movw	r28, r24
 a04:	fb 01       	movw	r30, r22
 a06:	00 84       	ldd	r0, Z+8	; 0x08
 a08:	f1 85       	ldd	r31, Z+9	; 0x09
 a0a:	e0 2d       	mov	r30, r0
 a0c:	09 95       	icall
 a0e:	89 2b       	or	r24, r25
 a10:	e1 f6       	brne	.-72     	; 0x9ca <fputc+0x10>
 a12:	d8 01       	movw	r26, r16
 a14:	16 96       	adiw	r26, 0x06	; 6
 a16:	8d 91       	ld	r24, X+
 a18:	9c 91       	ld	r25, X
 a1a:	17 97       	sbiw	r26, 0x07	; 7
 a1c:	01 96       	adiw	r24, 0x01	; 1
 a1e:	17 96       	adiw	r26, 0x07	; 7
 a20:	9c 93       	st	X, r25
 a22:	8e 93       	st	-X, r24
 a24:	16 97       	sbiw	r26, 0x06	; 6
 a26:	ce 01       	movw	r24, r28
 a28:	df 91       	pop	r29
 a2a:	cf 91       	pop	r28
 a2c:	1f 91       	pop	r17
 a2e:	0f 91       	pop	r16
 a30:	08 95       	ret

00000a32 <__ultoa_invert>:
 a32:	fa 01       	movw	r30, r20
 a34:	aa 27       	eor	r26, r26
 a36:	28 30       	cpi	r18, 0x08	; 8
 a38:	51 f1       	breq	.+84     	; 0xa8e <__ultoa_invert+0x5c>
 a3a:	20 31       	cpi	r18, 0x10	; 16
 a3c:	81 f1       	breq	.+96     	; 0xa9e <__ultoa_invert+0x6c>
 a3e:	e8 94       	clt
 a40:	6f 93       	push	r22
 a42:	6e 7f       	andi	r22, 0xFE	; 254
 a44:	6e 5f       	subi	r22, 0xFE	; 254
 a46:	7f 4f       	sbci	r23, 0xFF	; 255
 a48:	8f 4f       	sbci	r24, 0xFF	; 255
 a4a:	9f 4f       	sbci	r25, 0xFF	; 255
 a4c:	af 4f       	sbci	r26, 0xFF	; 255
 a4e:	b1 e0       	ldi	r27, 0x01	; 1
 a50:	3e d0       	rcall	.+124    	; 0xace <__ultoa_invert+0x9c>
 a52:	b4 e0       	ldi	r27, 0x04	; 4
 a54:	3c d0       	rcall	.+120    	; 0xace <__ultoa_invert+0x9c>
 a56:	67 0f       	add	r22, r23
 a58:	78 1f       	adc	r23, r24
 a5a:	89 1f       	adc	r24, r25
 a5c:	9a 1f       	adc	r25, r26
 a5e:	a1 1d       	adc	r26, r1
 a60:	68 0f       	add	r22, r24
 a62:	79 1f       	adc	r23, r25
 a64:	8a 1f       	adc	r24, r26
 a66:	91 1d       	adc	r25, r1
 a68:	a1 1d       	adc	r26, r1
 a6a:	6a 0f       	add	r22, r26
 a6c:	71 1d       	adc	r23, r1
 a6e:	81 1d       	adc	r24, r1
 a70:	91 1d       	adc	r25, r1
 a72:	a1 1d       	adc	r26, r1
 a74:	20 d0       	rcall	.+64     	; 0xab6 <__ultoa_invert+0x84>
 a76:	09 f4       	brne	.+2      	; 0xa7a <__ultoa_invert+0x48>
 a78:	68 94       	set
 a7a:	3f 91       	pop	r19
 a7c:	2a e0       	ldi	r18, 0x0A	; 10
 a7e:	26 9f       	mul	r18, r22
 a80:	11 24       	eor	r1, r1
 a82:	30 19       	sub	r19, r0
 a84:	30 5d       	subi	r19, 0xD0	; 208
 a86:	31 93       	st	Z+, r19
 a88:	de f6       	brtc	.-74     	; 0xa40 <__ultoa_invert+0xe>
 a8a:	cf 01       	movw	r24, r30
 a8c:	08 95       	ret
 a8e:	46 2f       	mov	r20, r22
 a90:	47 70       	andi	r20, 0x07	; 7
 a92:	40 5d       	subi	r20, 0xD0	; 208
 a94:	41 93       	st	Z+, r20
 a96:	b3 e0       	ldi	r27, 0x03	; 3
 a98:	0f d0       	rcall	.+30     	; 0xab8 <__ultoa_invert+0x86>
 a9a:	c9 f7       	brne	.-14     	; 0xa8e <__ultoa_invert+0x5c>
 a9c:	f6 cf       	rjmp	.-20     	; 0xa8a <__ultoa_invert+0x58>
 a9e:	46 2f       	mov	r20, r22
 aa0:	4f 70       	andi	r20, 0x0F	; 15
 aa2:	40 5d       	subi	r20, 0xD0	; 208
 aa4:	4a 33       	cpi	r20, 0x3A	; 58
 aa6:	18 f0       	brcs	.+6      	; 0xaae <__ultoa_invert+0x7c>
 aa8:	49 5d       	subi	r20, 0xD9	; 217
 aaa:	31 fd       	sbrc	r19, 1
 aac:	40 52       	subi	r20, 0x20	; 32
 aae:	41 93       	st	Z+, r20
 ab0:	02 d0       	rcall	.+4      	; 0xab6 <__ultoa_invert+0x84>
 ab2:	a9 f7       	brne	.-22     	; 0xa9e <__ultoa_invert+0x6c>
 ab4:	ea cf       	rjmp	.-44     	; 0xa8a <__ultoa_invert+0x58>
 ab6:	b4 e0       	ldi	r27, 0x04	; 4
 ab8:	a6 95       	lsr	r26
 aba:	97 95       	ror	r25
 abc:	87 95       	ror	r24
 abe:	77 95       	ror	r23
 ac0:	67 95       	ror	r22
 ac2:	ba 95       	dec	r27
 ac4:	c9 f7       	brne	.-14     	; 0xab8 <__ultoa_invert+0x86>
 ac6:	00 97       	sbiw	r24, 0x00	; 0
 ac8:	61 05       	cpc	r22, r1
 aca:	71 05       	cpc	r23, r1
 acc:	08 95       	ret
 ace:	9b 01       	movw	r18, r22
 ad0:	ac 01       	movw	r20, r24
 ad2:	0a 2e       	mov	r0, r26
 ad4:	06 94       	lsr	r0
 ad6:	57 95       	ror	r21
 ad8:	47 95       	ror	r20
 ada:	37 95       	ror	r19
 adc:	27 95       	ror	r18
 ade:	ba 95       	dec	r27
 ae0:	c9 f7       	brne	.-14     	; 0xad4 <__ultoa_invert+0xa2>
 ae2:	62 0f       	add	r22, r18
 ae4:	73 1f       	adc	r23, r19
 ae6:	84 1f       	adc	r24, r20
 ae8:	95 1f       	adc	r25, r21
 aea:	a0 1d       	adc	r26, r0
 aec:	08 95       	ret

00000aee <_exit>:
 aee:	f8 94       	cli

00000af0 <__stop_program>:
 af0:	ff cf       	rjmp	.-2      	; 0xaf0 <__stop_program>
